spring.application.name=api-gateway
logging.level.org.springframework.security=DEBUG

server.port=9000

# these are local ports for our microservices
services.product.url=http://product-service:8086
services.order.url=http://order-service:8087
services.inventory.url=http://inventory-service:8088

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/spring-microservices-security-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/spring-microservices-security-realm/protocol/openid-connect/certs


springdoc.swagger-ui.path=/swagger-ui
#springdoc.api-docs.path=/api-docs
springdoc.api-docs.path=/v3/api-docs

springdoc.swagger-ui.urls[0].name=Product Service
springdoc.swagger-ui.urls[0].url=/aggregate/product-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Order Service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Inventory Service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v3/api-docs



# Keycloak configuration
spring.security.oauth2.client.registration.keycloak.client-id=spring-client-credentials-id
spring.security.oauth2.client.registration.keycloak.client-secret=LzcxcsjqGRS13I1WTTAarCAIbYfXApt0
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/spring-microservices-security-realm
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/spring-microservices-security-realm/protocol/openid-connect/token


#Chat gave me this
spring.security.oauth2.resourceserver.jwt.audience=spring-client-credentials-id







#services.inventory.url=http://inventory-service:8088  we deo not want this to be accessible directly through the gateway